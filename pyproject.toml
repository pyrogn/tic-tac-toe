[project]
name = "tic_tac_toe"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "Pavel", email = "60060559+pyrogn@users.noreply.github.com"},
]
dependencies = [
    "python-telegram-bot>=20.7",
    "numpy>=1.26.3",
    "maturin>=1.4.0",
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

[project.scripts]
app = "tic_tac_toe.bot:main"

[project.optional-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
]
lint = [
    "pre-commit>=3.6.0",
    "black>=23.12.1",
    "ruff>=0.1.9",
]
dev = [
    "pip>=23.3.2",
]

[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"


[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"

[tool.pdm]
package-type = "application"

[tool.ruff]
include = ["pyproject.toml", "python/**/*.py", "tests/**/*.py", "experiments/**/*.py"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
